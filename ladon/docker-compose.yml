version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: ladon-prometheus
    network_mode: host
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: ladon-grafana
    network_mode: host
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-config/dashboards:/etc/grafana/dashboards
      - ./grafana-config/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    network_mode: host
    pid: host
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/node_exporter/textfile_collector'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ./node-exporter-textfile:/node_exporter/textfile_collector:ro
    restart: unless-stopped

  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.3.0-3.2.0-ubuntu22.04
    container_name: dcgm-exporter
    runtime: nvidia
    privileged: true
    network_mode: host
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    ports:
      - "9400:9400"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, utility, compute]
    volumes:
      - /run/nvidia:/run/nvidia:ro
      - /var/run/dcgm:/var/run/dcgm:ro
      - /tmp:/tmp

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    network_mode: host
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki-config/config.yml:/etc/loki/config.yml
      - loki-data:/tmp/loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    network_mode: host
    volumes:
      - ./promtail-config:/etc/promtail
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: ladon-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-phoenix}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  phoenix:
    image: arizephoenix/phoenix:latest
    container_name: ladon-phoenix
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-phoenix}
    ports:
      - "${PHOENIX_PORT:-6006}:6006"
      - "${PHOENIX_GRPC_PORT:-4317}:4317"
      - "${PHOENIX_PROMETHEUS_PORT:-9091}:9091"
    volumes:
      - ./phoenix_logs:/app/logs
    working_dir: /phoenix
    entrypoint: ["/usr/bin/python3.11"]
    command: ["-m", "phoenix.server.main", "serve"]
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  loki-data:
  postgres_data:
