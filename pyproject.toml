[tool.poetry]
name = "olympus"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "OracleDelphi"}, {include = "src_new"}]

[tool.poetry.dependencies]
python = "^3.10"
reflex = "^0.6.7"
httpx = ">=0.24.0,<0.26.0"
sqlalchemy = "^2.0.23"
openai = "^1.6.0"
aiohttp = "^3.9.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-xdist = "^3.3.1"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.4.1"
pylint = "^2.17.5"
aioresponses = "^0.7.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["src_new/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "-ra",
    "-q",
    "--cov=src_new",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=100"
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
source = ["src_new"]
omit = [
    "tests/*",
    "**/__init__.py",
    "*/run_tests.py",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
    "except ImportError:",
    "def main"
]
